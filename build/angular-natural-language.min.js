/*! angular-natural-language 2015-02-04 */
angular.module("vr.directives.nlForm",["vr.directives.nlForm.select","vr.directives.nlForm.text"]),angular.module("vr.directives.nlForm.select",[]).directive("nlSelect",function(){return{restrict:"EA",replace:!0,scope:{value:"=",options:"=",change:"&"},controller:"nlSelectCtrl",template:"<div ng-form='nlSelect' class='nl-field nl-dd' ng-class=\"{'nl-field-open': opened}\"><a class='nl-field-toggle' ng-click='open($event)' ng-bind='getSelected()'></a><select ng-change='select()' ng-model='value' ng-options='opt as opt.label for opt in options' class='nl-selectbox'></select></div>",link:function(a,b,c){a.required=!angular.isUndefined(c.required),a.multiple=!angular.isUndefined(c.multiple),a.conjunction=a.multiple&&""!=c.multiple?c.multiple:"and",a.none=angular.isUndefined(c.none)?"none":c.none,a.allOptions=angular.isUndefined(c.all)?!1:c.all,a.multiple&&angular.isUndefined(a.value)&&(a.value=[]),a.multiple&&!angular.isArray(a.value)&&(a.value=[a.value]);var d=!1;angular.forEach(b.parent().children(),function(a){a=angular.element(a),a.hasClass("nl-overlay")&&(d=a)}),d||(d=angular.element('<div class="nl-overlay"></div>'),b.parent().append(d)),d.bind("click",function(){a.$apply(a.close)})}}}).controller("nlSelectCtrl",["$scope","$timeout",function(a,b){function c(b){var c=!1;return angular.forEach(a.options,function(d){switch(a.optionType){case j:case l:b==d&&(c=!0);break;case k:case m:b==d.value&&(c=!0)}}),c}function d(){switch(a.optionType){case j:case k:return a.options.length;case m:case l:var b=0;return angular.forEach(a.options,function(){b++}),b}return 0}function e(b){if(b<d()&&b>=0)switch(a.optionType){case j:return{value:a.options[0],label:a.options[0]};case k:return a.options[0];case l:case m:var c=null,e=0;return angular.forEach(a.options,function(d,f){e==b&&(c=a.optionType==l?{value:d,label:f}:d),e++}),c}return{value:"",label:""}}function f(b){var c=b;switch(a.optionType){case k:case m:angular.forEach(a.options,function(a){a.value==b&&(c=a.label)});break;case j:break;case l:angular.forEach(a.options,function(a,d){b==a&&(c=d)})}return c}function g(b){var c=b;switch(a.optionType){case j:break;case k:angular.forEach(a.options,function(a){a.label==b&&(c=a.value)});break;case l:c=a.options[b];break;case m:c=a.options[b].value}return c}function h(b){var c=b;switch(a.optionType){case j:break;case l:angular.forEach(a.options,function(a,d){b==a&&(c=d)});break;case k:angular.forEach(a.options,function(a){a.value==b.value&&(c=a.label)});break;case m:angular.forEach(a.options,function(a,d){b==a&&(c=d)})}return c}function i(){if(a.multiple){var b=[];angular.forEach(a.value,function(a){c(a)&&b.push(a)}),a.value=b}else c(a.value)||(a.value=e(0).value)}var j=1,k=2,l=3,m=4;a.opened=!1,a.open=function(c){c.stopPropagation();var d=angular.element(c.target).next(),e=document.createEvent("MouseEvents");e.initMouseEvent("mousedown",c.bubbles,c.cancelable,window,0,0,0,0,0,!1,!1,!1,!1,0,null),b(function(){d[0].dispatchEvent(e)},0),a.opened=!0,a.openValue=a.value},a.close=function(){a.opened=!1,a.openValue!==a.value&&"function"==typeof a.change&&b(function(){a.change()},0)},a.select=function(){a.setValue(a.value.value),a.close()},a.selectAll=function(){angular.forEach(a.options,function(b){var c=h(b);a.isSelected(c)||a.select(c),a.close()})},a.selectNone=function(){angular.forEach(a.options,function(b){var c=h(b);a.isSelected(c)&&a.select(c),a.close()})},a.isAllSelected=function(){return!angular.isUndefined(a.value)&&a.value.length==d()},a.isNoneSelected=function(){return angular.isUndefined(a.value)||0==a.value.length},a.setValue=function(b){var c=g(b);if(a.multiple){var d=a.value.indexOf(c);-1==d?a.value.push(c):a.value.splice(d,1),a.required&&(0==a.value.length?a.nlSelect.$setValidity("required",!1):a.nlSelect.$setValidity("required",!0))}else a.value=c},a.getLabels=function(){switch(a.optionType){case j:return a.options;case k:return a.options.map(function(a){return a.label});case l:case m:var b=[];return angular.forEach(a.options,function(c,d){b.push(a.optionType==l?d:c.label)}),b}return[]},a.getSelected=function(){if(a.multiple){var b="";if(!angular.isUndefined(a.value)&&a.value.length>0)if(a.allOptions&&a.value.length==d())b=a.allOptions;else{var c="",e=1;angular.forEach(a.value,function(d){b+=c+f(d),e++,c=a.value.length>2?", ":" ",e==a.value.length&&(c+=a.conjunction+" ")})}else b=a.none;return b}return f(a.value)},a.isSelected=function(b){return angular.isUndefined(a.value)?!1:a.multiple?a.value.indexOf(g(b))>-1:a.value==g(b)},a.$watch("options",function(){if(a.optionType=null,angular.isArray(a.options))a.optionType=angular.isObject(a.options[0])?k:j;else if(angular.isObject(a.options))for(var b in a.options)if(a.options.hasOwnProperty(b)){a.optionType=angular.isObject(a.options[b])?m:l;break}i()},!0)}]),angular.module("vr.directives.nlForm.text",[]).directive("nlText",function(){return{restrict:"EA",replace:!0,scope:{placeholder:"@",subline:"@",name:"@",value:"=",change:"&",html5type:"@"},template:'<div ng-form class="nl-field nl-ti-text" ng-class="{\'nl-field-open\': opened}"><a class="nl-field-toggle" ng-click="open($event)" ng-bind="viewValue()"></a><ul><li class="nl-ti-input"><input type="text" placeholder="{{ placeholder }}" name="{{ name }}" ng-model="value" ng-click="$event.stopPropagation()" ng-required="required" /><button class="nl-field-go" ng-click="close()">Go</button></li><li class="nl-ti-example" ng-show="showSubline()" ng-bind-html-unsafe="subline"></li></ul></div>',controller:"nlTextCtrl",link:function(a,b,c){a.required=!angular.isUndefined(c.required);var d=!1;angular.forEach(b.parent().children(),function(a){a=angular.element(a),a.hasClass("nl-overlay")&&(d=a)}),d||(d=angular.element('<div class="nl-overlay"></div>'),b.parent().append(d)),d.bind("click",function(){a.$apply(a.close)})}}}).controller("nlTextCtrl",["$scope",function(a){a.opened=!1,a.open=function(b){b.stopPropagation(),a.opened=!0,a.openValue=a.value},a.close=function(){a.opened=!1,a.openValue!==a.value&&"function"==typeof a.change&&a.change()},a.viewValue=function(){return""==a.value?a.placeholder:a.value},a.showSubline=function(){return angular.isString(a.subline)&&""!=a.subline}}]);